// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace APIRestLab01.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20230920071731_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Bodega", b =>
                {
                    b.Property<Guid>("BodegaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BodegaId");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BodegaId");

                    b.ToTable("Bodegas");

                    b.HasData(
                        new
                        {
                            BodegaId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Ciudad = "Bogota D.C",
                            Direccion = "Calle 95#75-05",
                            Estado = "Activo",
                            Nombre = "Candela"
                        },
                        new
                        {
                            BodegaId = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            Ciudad = "Medellin",
                            Direccion = "Calle 59 B Bis # 37-49",
                            Estado = "Inactivo",
                            Nombre = "Paacifico"
                        });
                });

            modelBuilder.Entity("Entities.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ClienteId");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Edad")
                        .IsRequired()
                        .HasMaxLength(99)
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("numDocumento")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<string>("tipoDocumento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("01fecba8-664d-4b20-b5de-024705497d4a"),
                            Apellido = "Rios",
                            Correo = "rios.rios@gmail.com",
                            Edad = 30,
                            Nombre = "Kelly",
                            numDocumento = 1013102042,
                            tipoDocumento = "CC"
                        },
                        new
                        {
                            Id = new Guid("01fecbc1-664d-4b20-b5de-024705497d4a"),
                            Apellido = "Mahecha",
                            Correo = "rios.rios@gmail.com",
                            Edad = 21,
                            Nombre = "Luna",
                            numDocumento = 1000257543,
                            tipoDocumento = "CC"
                        });
                });

            modelBuilder.Entity("Entities.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CompanyId");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Address = "583 Wall Dr. Gwynn Oak, MD 21207",
                            Country = "USA",
                            Name = "IT_Solutions Ltd"
                        },
                        new
                        {
                            Id = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            Address = "312 Forest Avenue, BF 923",
                            Country = "USA",
                            Name = "Admin_Solutions Ltd"
                        });
                });

            modelBuilder.Entity("Entities.Models.Empleado", b =>
                {
                    b.Property<Guid>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EmpleadoId");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BodegaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("FechaFin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaInicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sueldo")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("EmpleadoId");

                    b.HasIndex("BodegaId");

                    b.ToTable("Empleados");

                    b.HasData(
                        new
                        {
                            EmpleadoId = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            Apellido = "Raiden",
                            BodegaId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Cargo = "Analista",
                            Documento = "165813218",
                            FechaFin = "30/02/2023",
                            FechaInicio = "15/03/2020",
                            Nombre = "Sam ",
                            Sueldo = "55300000"
                        },
                        new
                        {
                            EmpleadoId = new Guid("80abbca5-664d-4b20-b5de-024705497d4a"),
                            Apellido = "Murcia",
                            BodegaId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Cargo = "Analista",
                            Documento = "348651384",
                            FechaFin = "30/02/2023",
                            FechaInicio = "29/01/2020",
                            Nombre = "Johan",
                            Sueldo = "20000000"
                        },
                        new
                        {
                            EmpleadoId = new Guid("80abbca4-664d-4b20-b5de-024705497d4a"),
                            Apellido = "Rodriguez",
                            BodegaId = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            Cargo = "Analista",
                            Documento = "15684283",
                            FechaFin = "29/10/2022",
                            FechaInicio = "25/09/2020",
                            Nombre = "Andres",
                            Sueldo = "1500000"
                        });
                });

            modelBuilder.Entity("Entities.Models.Factura", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FacturaId");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("IVACompra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Facturas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fd713788-b5ae-49ff-8b2c-f311b9cb0cc4"),
                            FechaCompra = new DateTime(2023, 9, 20, 2, 17, 30, 951, DateTimeKind.Local).AddTicks(9519),
                            IVACompra = 0.18m,
                            Subtotal = 100.00m,
                            Total = 118.00m
                        },
                        new
                        {
                            Id = new Guid("64b512e7-46ae-4989-a049-a446118099c4"),
                            FechaCompra = new DateTime(2023, 9, 20, 2, 17, 30, 951, DateTimeKind.Local).AddTicks(9538),
                            IVACompra = 0.18m,
                            Subtotal = 100.00m,
                            Total = 118.00m
                        });
                });

            modelBuilder.Entity("Entities.Models.Inventario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InventarioId");

                    b.Property<int?>("CantidadProducto")
                        .IsRequired()
                        .HasMaxLength(999)
                        .HasColumnType("int");

                    b.Property<string>("ClasificacionProducto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("IdFactura")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("int");

                    b.Property<string>("MarcaProducto")
                        .IsRequired()
                        .HasMaxLength(99)
                        .HasColumnType("nvarchar(99)");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PrecioProducto")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("Inventarios");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            CantidadProducto = 50,
                            ClasificacionProducto = "Vino",
                            IdFactura = 777,
                            IdProducto = 222,
                            MarcaProducto = "Gato Negro",
                            NombreProducto = "Gato Negro",
                            PrecioProducto = "20000"
                        });
                });

            modelBuilder.Entity("Entities.Models.Nomina", b =>
                {
                    b.Property<Guid>("NominaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CuentaBancaria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NominaId");

                    b.ToTable("Nominas");

                    b.HasData(
                        new
                        {
                            NominaId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991872"),
                            CuentaBancaria = "1234567890",
                            Direccion = "123 Calle Principal",
                            Email = "correo@example.com",
                            FechaCreacion = new DateTime(2023, 9, 20, 2, 17, 30, 952, DateTimeKind.Local).AddTicks(5),
                            Telefono = "555-123-4567"
                        },
                        new
                        {
                            NominaId = new Guid("376d45c8-659d-4ace-b249-cfbf4f231915"),
                            CuentaBancaria = "1234567890",
                            Direccion = "456 Calle Secundaria",
                            Email = "otrocorreo@example.com",
                            FechaCreacion = new DateTime(2023, 9, 20, 2, 17, 30, 952, DateTimeKind.Local).AddTicks(11),
                            Telefono = "555-987-6543"
                        });
                });

            modelBuilder.Entity("Entities.Models.Productos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductoId");

                    b.Property<string>("ClasificacionProducto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MarcaProducto")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PrecioProducto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80abbca8-664d-4b21-b5de-024705497d4a"),
                            ClasificacionProducto = "Cerveza",
                            MarcaProducto = "Poker",
                            NombreProducto = "Poker ",
                            PrecioProducto = "3000"
                        },
                        new
                        {
                            Id = new Guid("80abbca5-664d-4b22-b5de-024705497d4a"),
                            ClasificacionProducto = "Vino",
                            MarcaProducto = "Gato Negro",
                            NombreProducto = "Gato Negro ",
                            PrecioProducto = "20000"
                        },
                        new
                        {
                            Id = new Guid("80abbca4-664d-4b23-b5de-024705497d4a"),
                            ClasificacionProducto = "whisky",
                            MarcaProducto = "Jack Dniel's",
                            NombreProducto = "Jack Dniel's ",
                            PrecioProducto = "50000"
                        });
                });

            modelBuilder.Entity("Entities.Models.Proveedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProveedorId");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Edad")
                        .IsRequired()
                        .HasMaxLength(99)
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NombreEntidadBancaria")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("NumeroCuentaBancaria")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("numDocumento")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Proveedores");

                    b.HasData(
                        new
                        {
                            Id = new Guid("01bbcdef-664d-4b20-b5de-024705497d4a"),
                            Correo = "Juan0212@gmail.com",
                            Direccion = "Cra 43i #50-32 sur",
                            Edad = 30,
                            Nombre = "Juan",
                            NombreEntidadBancaria = "Bancolombia",
                            NumeroCuentaBancaria = 478543462,
                            Telefono = "3512255454",
                            numDocumento = 1013102042
                        },
                        new
                        {
                            Id = new Guid("00abc238-664d-4b20-b5de-024705497d4a"),
                            Correo = "Pedroxd@gmail.com",
                            Direccion = "Cll 10c #11-32",
                            Edad = 30,
                            Nombre = "Pedro",
                            NombreEntidadBancaria = "BancoBogotá",
                            NumeroCuentaBancaria = 51156,
                            Telefono = "3623568478",
                            numDocumento = 1000257543
                        });
                });

            modelBuilder.Entity("Entities.Models.Empleado", b =>
                {
                    b.HasOne("Entities.Models.Bodega", "Bodega")
                        .WithMany("Empleados")
                        .HasForeignKey("BodegaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bodega");
                });

            modelBuilder.Entity("Entities.Models.Bodega", b =>
                {
                    b.Navigation("Empleados");
                });
#pragma warning restore 612, 618
        }
    }
}
